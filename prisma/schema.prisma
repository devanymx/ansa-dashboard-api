// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  photo_url   String?
  price       Float
  active      Boolean @default(true)

  categories CategoriesOnProducts[]
  tickets    ProductsOnTicket[]
  store      Store                  @relation(fields: [storeId], references: [id])
  storeId    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String
  active Boolean @default(true)

  products CategoriesOnProducts[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Store {
  id          Int     @id @default(autoincrement())
  name        String
  slug        String
  location    String?
  description String?
  active      Boolean @default(true)

  products Product[]
  tickets  Ticket[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CategoriesOnProducts {
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([productId, categoryId])
}

model Ticket {
  id         Int   @unique @default(autoincrement())
  store      Store @relation(fields: [storeId], references: [id])
  storeId    Int
  totalPrice Float

  products ProductsOnTicket[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductsOnTicket {
  quantity Int
  price    Float

  ticket    Ticket  @relation(fields: [ticketId], references: [id])
  ticketId  Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@id([ticketId, productId])
}
